services:
  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: minio
    restart: unless-stopped
    env_file:
      - .env
    networks:
      mlnetwork:
        ipv4_address: 172.10.1.2
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio-data:/data
    command: server /data --console-address ":9001"

  minio_setup:
    image: minio/mc:RELEASE.2025-04-16T18-13-26Z
    container_name: minio_setup
    env_file:
      - .env
    depends_on:
      - minio
    networks:
      mlnetwork:
        ipv4_address: 172.10.1.7
    entrypoint: ["/bin/sh", "-c"]
    command: 
      - |
        mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}
        mc admin user svcacct add --access-key ${MLFLOW_AWS_ACCESS_KEY_ID} --secret-key ${MLFLOW_AWS_SECRET_ACCESS_KEY} myminio ${MINIO_ROOT_USER}
        mc mb myminio/${MLFLOW_BUCKET_NAME}/artifacts
        mc mb myminio/test-bucket

  postgres:
    image: postgres:13-alpine
    container_name: ml_db
    restart: unless-stopped
    env_file:
      - .env
    networks:
      mlnetwork:
        ipv4_address: 172.10.1.3
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-init:/docker-entrypoint-initdb.d
      - ./pg-data:/var/lib/postgresql/data

  label_studio:
    stdin_open: true
    tty: true
    image: heartexlabs/label-studio:latest
    container_name: label_studio
    restart: unless-stopped
    env_file:
      - .env
    networks:
      mlnetwork:
        ipv4_address: 172.10.1.4
    ports:
      - "8080:8080"
    volumes:
      - ./labelstudio-data:/label-studio/data
    depends_on:
      - minio
      - postgres

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: jupyter
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./jupyter-notebooks:/home/jupyter/notebooks
    ports:
      - "8888:8888"
    networks:
      mlnetwork:
        ipv4_address: 172.10.1.5

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5050:5000"
    networks:
      mlnetwork:
        ipv4_address: 172.10.1.6
    depends_on:
      - minio
      - postgres
    command: >
      mlflow server
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@ml_db:5432/${MLFLOW_DATABASE}
      --host 0.0.0.0
      --serve-artifacts
      --artifacts-destination s3://${MLFLOW_BUCKET_NAME}/artifacts


networks:
  mlnetwork:
    driver: bridge
    ipam:
      config:
        - subnet: 172.10.1.0/24
          gateway: 172.10.1.1
